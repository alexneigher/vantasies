%br{:style => "clear:both"}/

.panel.pad3.m4b
  %h3.m00 About your van
  %hr
  .form-group
    %div{class: ('has-error' if show_errors(@van, :title).present?)}
      %label Title
      = f.text_field :title, class: 'form-control', placeholder: 'Vanta White'
      %p.error= show_errors(@van, :title)
  .form-group
    %div{class: ('has-error' if show_errors(@van, :location).present?)}
      = f.hidden_field :latitude
      = f.hidden_field :longitude
      %label Location
      = f.text_field :location, class: 'form-control', id: 'locationField', placeholder: 'Boulder, CO'
      %p.error= show_errors(@van, :location)
  .form-group
    %div{class: ('has-error' if show_errors(@van, :condition).present?)}
      %label Condition
      = f.select :condition, Van.conditions.keys.map {|f| [ f.titleize, f ] }, {}, class: 'form-control'
      %p.error= show_errors(@van, :condition)

  .form-group
    %div{class: ('has-error' if show_errors(@van, :description).present?)}
      %label Description
      = f.text_area :description, class: 'form-control', rows: 8
      %p.error= show_errors(@van, :description)
  .row
    .col-lg-4
      .form-group
        %div{class: ('has-error' if show_errors(@van, :make))}
          %label Make
          = f.text_field :make, class: 'form-control', placeholder: 'Ford'
          %p.error= show_errors(@van, :make)
    .col-lg-4
      %div{class: ('has-error' if show_errors(@van, :model))}
        %label Model
        = f.text_field :model, class: 'form-control', placeholder: 'Easy Rider'
        %p.error= show_errors(@van, :model)

    .col-lg-4
      %div{class: ('has-error' if show_errors(@van, :year).present?)}
        %label Year
        = f.text_field :year, class: 'form-control', placeholder: '2001'
        %p.error= show_errors(@van, :year)

  .row
    .col-lg-3
      .form-group
        %div{class: ('has-error' if show_errors(@van, :price).present?)}
          %label Price
          .input-group
            .input-group-addon $
            = f.text_field :price, class: 'form-control', placeholder: '5000'
          %p.error= show_errors(@van, :price)

.panel.pad3.m4b
  %h3.m00 Van Details
  %hr
  .row
    .col-lg-3
      .form-group
        %label Mileage
        = f.text_field :mileage, class: 'form-control', placeholder: '120,000'
        %p.error= show_errors(@van, :mileage)
  .row
    .col-lg-4
      .form-group
        %label Transmision
        = f.select :transmission, Van.transmissions.keys.map {|f| [ f.titleize, f ] }, {}, class: "form-control"
        %p.error= show_errors(@van, :transmision)
    .col-lg-4
      .form-group
        %label Fuel Type
        = f.select :fuel_type, Van.fuel_types.keys.map {|f| [ f.titleize, f ] }, {}, class: "form-control"
        %p.error= show_errors(@van, :fuel_type)
    .col-lg-4
      .form-group
        %label Drive Train
        = f.select :drivetrain, Van.drivetrains.keys.map {|f| [ f.titleize, f ] },{}, class: "form-control"
        %p.error= show_errors(@van, :drivetrain)
  .row
    .col-lg-3
      .form-group
        %label VIN
        = f.text_field :vin, class: 'form-control', placeholder: '12erRF567'
        %p.error= show_errors(@van, :vin)

  .form-group
    %label Features
    = f.text_field :features, data: {role: 'tagsinput'}, placeholder: 'Ex. Solar Power, Fridge, Bike Rack, etc'

  .form-group
    %label
      = f.check_box :can_deliver
      Willing to Deliver?

    %p.error= show_errors(@van, :features)
.panel.pad3
  %h3.m00 Add Photos and Links
  %hr
  .form-group
    %label Add as many photos as you like!
    %br
    .btn.btn-primary
      = file_field_tag "photos[]", type: :file, multiple: true
  .form-group
    %label Instagram URL
    = f.text_field :instagram_url, class: 'form-control', placeholder: 'www.instagram.com/vanta'
    %p.error= show_errors(@van, :instagram_url)



:javascript
  if (typeof(google) == "undefined"){
    var script = document.createElement('script');
        script.type = 'text/javascript';
        script.src = "https://maps.googleapis.com/maps/api/js?key=#{ENV['GOOGLE_API_KEY']}&libraries=places&callback=init";
        document.body.appendChild(script);
  }else{
    init();
  }

  function init(){
    var autocomplete = new google.maps.places.Autocomplete(document.getElementById('locationField'));
    google.maps.event.addListener(autocomplete, 'place_changed', function () {
      var place = autocomplete.getPlace();

      var latitude = place.geometry.location.lat();
      var longitude = place.geometry.location.lng();

      $('#van_latitude').val(latitude);
      $('#van_longitude').val(longitude);
    });

  };